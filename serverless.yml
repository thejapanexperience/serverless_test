service: ServerlessTestV4

provider:
  name: aws
  profile: personal_aws
  iamRoleStatements:
    -  Effect: Allow
       Action:
         - sqs:CreateQueue
         - sqs:SendMessage
         - sqs:ReceiveMessage
         - sqs:DeleteMessage
         - sqs:GetQueueAttributes
         - sns:Publish
         - sns:CreateTopic
         - lambda:Invoke
         - cloudwatch:PutEvents
       Resource: "*"
  runtime: nodejs8.10
  stage: dev
  region: eu-west-2
  environment:
    SQS_URL: { "Fn::Join" : ["", ["https://sqs.${self:custom.region}.amazonaws.com/", { "Ref" : "AWS::AccountId" }, "/${self:custom.updatesQueue}" ] ]  }
    PROCESS_UPDATE_SNS_ARN: { "Fn::Join" : ["", ["arn:aws:sns:${self:custom.region}:", { "Ref" : "AWS::AccountId" }, ":${self:custom.processUpdateTrigger}" ] ]  }
    COUNT_UPDATES_SNS_ARN: { "Fn::Join" : ["", ["arn:aws:sns:${self:custom.region}:", { "Ref" : "AWS::AccountId" }, ":${self:custom.countUpdatesTrigger}" ] ]  }
    EVENT_ENDPOINT: ${file(./serverless.env.yml):dev.EVENT_ENDPOINT}

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  updatesQueue: "${self:service}-updatesQueue-${self:custom.stage}"
  processUpdateTrigger: "${self:service}-processUpdateTrigger-${self:custom.stage}"
  countUpdatesTrigger: "${self:service}-countUpdatesTrigger-${self:custom.stage}"
  jest:
    # You can pass jest options here
    # See details here: https://facebook.github.io/jest/docs/configuration.html
    # For instance, uncomment next line to enable code coverage
    collectCoverage: true

package:
  exclude:
    - node_modules/**

functions:
  receiveUpdate:
    handler: functions/receiveUpdate/receiveUpdate.handler
    events:
      - http:
          path: receive_update
          method: post

  processUpdate:
    handler: functions/processUpdate/processUpdate.handler
    events:
      - sns: ${self:custom.processUpdateTrigger}
      - schedule: rate(24 hours)
  
  countUpdates:
    handler: functions/countUpdates/countUpdates.handler
    events:
      - sns: ${self:custom.countUpdatesTrigger}
      - schedule: rate(24 hours)

resources:
  Resources:
    updatesQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.updatesQueue}

plugins:
  - serverless-offline
  - serverless-jest-plugin
